{"version":3,"sources":["store/engine/cameras/actions.js","components/Camera/index.js"],"names":["CreatePerspectiveCamera","name","FOV","frustNear","frustFar","initialPosition","posX","posY","posZ","initialRotation","rotX","rotY","rotZ","dispatch","a","PerspectiveCamera","type","types","props","object","window","innerWidth","innerHeight","DestroyPerspectiveCamera","SetCamera","CallCamera","ReadyCamera","ReadyCameraPos","ReadyCameraRot","AddVisibilityFunction","action","RemoveVisibilityFunction","Camera","objectKey","useDispatch","calledCamera","useSelector","state","engine","cameras","called","currentCamera","current","ready","all","readyPos","readyRot","useEffect","position","setX","setY","setZ","rotateX","rotateY","rotateZ"],"mappings":"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","file":"static/js/12.65f47eb3.chunk.js","sourcesContent":["import * as types from './types';\n\nexport const CreatePerspectiveCamera = (\n  name, FOV = 75, frustNear = 0.1,\n  frustFar = 1000, initialPosition = { posX: 0, posY: 0, posZ: 0 },\n  initialRotation = { rotX: 0, rotY: 0, rotZ: 0 }\n) => async dispatch => {\n  const { PerspectiveCamera } = await import('three');\n  dispatch({\n    type: types.CREATE,\n    name,\n    props: {\n      FOV,\n      frustNear,\n      frustFar,\n      initialPosition,\n      initialRotation\n    },\n    object: new PerspectiveCamera(\n      FOV,\n      window.innerWidth / window.innerHeight,\n      frustNear,\n      frustFar\n    )\n  });\n};\n\nexport const DestroyPerspectiveCamera = name => ({\n  type: types.DESTROY,\n  name\n});\n\nexport const SetCamera = name => ({\n  type: types.CURRENT,\n  name\n});\n\nexport const CallCamera = name => ({\n  type: types.CALL,\n  name\n});\n\nexport const ReadyCamera = name => ({\n  type: types.READY,\n  name\n});\n\nexport const ReadyCameraPos = name => ({\n  type: types.READY_POS,\n  name\n});\n\nexport const ReadyCameraRot = name => ({\n  type: types.READY_ROT,\n  name\n});\n\nexport const AddVisibilityFunction = (name, action) => ({\n  type: types.ADD_FUNCTION,\n  name,\n  action\n});\n\nexport const RemoveVisibilityFunction = name => ({\n  type: types.REMOVE_FUNCTION,\n  name\n});\n","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport {\n  CreatePerspectiveCamera,\n  DestroyPerspectiveCamera,\n  ReadyCamera,\n  ReadyCameraPos,\n  ReadyCameraRot,\n  SetCamera\n} from '../../store/engine/cameras/actions';\n\nexport default function Camera ({\n  objectKey, FOV, frustNear,\n  frustFar, initialPosition, initialRotation\n}) {\n  const dispatch = useDispatch();\n\n  const calledCamera = useSelector(state => state.engine.cameras.called);\n  const currentCamera = useSelector(state => state.engine.cameras.current.name);\n  const ready = useSelector(state => state.engine.cameras.all[objectKey]?.ready);\n  const object = useSelector(state => state.engine.cameras.all[objectKey]?.object);\n  const readyPos = useSelector(state => state.engine.cameras.all[objectKey]?.readyPos);\n  const readyRot = useSelector(state => state.engine.cameras.all[objectKey]?.readyRot);\n\n  useEffect(() => {\n    dispatch(CreatePerspectiveCamera(\n      objectKey,\n      FOV,\n      frustNear,\n      frustFar,\n      initialPosition,\n      initialRotation\n    ));\n    return () => dispatch(DestroyPerspectiveCamera(objectKey));\n  }, [dispatch, objectKey, FOV, frustNear, frustFar, initialPosition, initialRotation]);\n\n  useEffect(() => {\n    object && !readyPos && (() => {\n      initialPosition && object.position.setX(initialPosition.posX);\n      initialPosition && object.position.setY(initialPosition.posY);\n      initialPosition && object.position.setZ(initialPosition.posZ);\n      dispatch(ReadyCameraPos(objectKey));\n    })();\n  }, [dispatch, object, objectKey, readyPos, initialPosition]);\n\n  useEffect(() => {\n    object && !readyRot && (() => {\n      initialRotation && object.rotateX(initialRotation.rotX);\n      initialRotation && object.rotateY(initialRotation.rotY);\n      initialRotation && object.rotateZ(initialRotation.rotZ);\n      dispatch(ReadyCameraRot(objectKey));\n    })();\n  }, [dispatch, object, objectKey, readyRot, initialRotation]);\n\n  useEffect(() => {\n    !ready && readyPos && readyRot && dispatch(ReadyCamera(objectKey));\n  }, [dispatch, object, objectKey, readyPos, readyRot, ready]);\n\n  useEffect(() => {\n    calledCamera === objectKey &&\n    currentCamera !== calledCamera &&\n    dispatch(SetCamera(objectKey));\n  }, [dispatch, calledCamera, currentCamera, objectKey]);\n\n  return null;\n}\n"],"sourceRoot":""}