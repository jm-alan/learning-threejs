{"version":3,"sources":["store/engine/scenes/actions.js","components/Scene/index.js"],"names":["CallScene","name","type","types","SetScene","CreateScene","dispatch","a","Scene","object","DestroyScene","AddToScene","RemoveFromScene","children","useDispatch","useSelector","state","engine","scenes","all","currentScene","current","calledScene","called","useEffect"],"mappings":"4WAEaA,EAAY,SAAAC,GAAI,MAAK,CAChCC,KAAMC,IACNF,SAGWG,EAAW,SAAAH,GAAI,MAAK,CAC/BC,KAAMC,IACNF,SAGWI,EAAc,SAAAJ,GAAI,8CAAI,WAAMK,GAAN,iBAAAC,EAAA,sEACT,mDADS,gBACzBC,EADyB,EACzBA,MACRF,EAAS,CACPJ,KAAMC,IACNF,OACAQ,OAAQ,IAAID,IALmB,2CAAJ,uDASlBE,EAAe,SAAAT,GAAI,MAAK,CACnCC,KAAMC,IACNF,SAGWU,EAAa,SAACV,EAAD,OAASQ,EAAT,EAASA,OAAT,MAAuB,CAC/CP,KAAMC,IACNF,OACAQ,WAGWG,EAAkB,SAACX,EAAD,OAASQ,EAAT,EAASA,OAAT,MAAuB,CACpDP,KAAMC,IACNF,OACAQ,Y,gCCnCF,yEAKe,SAASD,EAAT,GAAqC,IAAnBK,EAAkB,EAAlBA,SAAUZ,EAAQ,EAARA,KACnCK,EAAWQ,cAEXL,EAASM,aAAY,SAAAC,GAAK,OAAIA,EAAMC,OAAOC,OAAOC,IAAIlB,MACtDmB,EAAeL,aAAY,SAAAC,GAAK,OAAIA,EAAMC,OAAOC,OAAOG,QAAQpB,QAChEqB,EAAcP,aAAY,SAAAC,GAAK,OAAIA,EAAMC,OAAOC,OAAOK,UAa7D,OAXAC,qBAAU,WAER,OADCf,GAAUH,EAASD,YAAYJ,IACzB,kBAAMQ,GAAUH,EAASI,YAAaT,OAC5C,CAACK,EAAUG,EAAQR,IAEtBuB,qBAAU,WACRF,IAAgBrB,GAChBmB,IAAiBnB,GACjBK,EAASF,YAASH,MACjB,CAACK,EAAUL,EAAMmB,EAAcE,IAE3BT,EAASZ","file":"static/js/14.52c7d648.chunk.js","sourcesContent":["import * as types from './types';\n\nexport const CallScene = name => ({\n  type: types.CALL,\n  name\n});\n\nexport const SetScene = name => ({\n  type: types.CURRENT,\n  name\n});\n\nexport const CreateScene = name => async dispatch => {\n  const { Scene } = await import('three');\n  dispatch({\n    type: types.CREATE,\n    name,\n    object: new Scene()\n  });\n};\n\nexport const DestroyScene = name => ({\n  type: types.DESTROY,\n  name\n});\n\nexport const AddToScene = (name, { object }) => ({\n  type: types.ADD,\n  name,\n  object\n});\n\nexport const RemoveFromScene = (name, { object }) => ({\n  type: types.REMOVE,\n  name,\n  object\n});\n","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { CreateScene, DestroyScene, SetScene } from '../../store/engine/scenes/actions';\n\nexport default function Scene ({ children, name }) {\n  const dispatch = useDispatch();\n\n  const object = useSelector(state => state.engine.scenes.all[name]);\n  const currentScene = useSelector(state => state.engine.scenes.current.name);\n  const calledScene = useSelector(state => state.engine.scenes.called);\n\n  useEffect(() => {\n    !object && dispatch(CreateScene(name));\n    return () => object && dispatch(DestroyScene(name));\n  }, [dispatch, object, name]);\n\n  useEffect(() => {\n    calledScene === name &&\n    currentScene !== name &&\n    dispatch(SetScene(name));\n  }, [dispatch, name, currentScene, calledScene]);\n\n  return children(name);\n}\n"],"sourceRoot":""}