{"version":3,"sources":["components/Canvas/index.js","store/engine/canvas/actions.js"],"names":["Canvas","dispatch","useDispatch","canvasRef","useRef","useEffect","current","type","types","ref","id"],"mappings":"4MAKe,SAASA,IACtB,IAAMC,EAAWC,cAEXC,EAAYC,iBAAO,MAOzB,OALAC,qBAAU,WCRa,IAAAC,EDUrB,OADAL,GCTqBK,EDSFH,EAAUG,QCTI,CACnCC,KAAMC,IACNF,aDQS,kBAAML,ECLiB,CAChCM,KAAMC,SDKH,CAACP,IAGF,wBAAQQ,IAAKN,EAAWO,GAAG","file":"static/js/15.1d510242.chunk.js","sourcesContent":["import { useEffect, useRef } from 'react';\nimport { useDispatch } from 'react-redux';\n\nimport { UnsetCanvas, SetCanvas } from '../../store/engine/canvas/actions';\n\nexport default function Canvas () {\n  const dispatch = useDispatch();\n\n  const canvasRef = useRef(null);\n\n  useEffect(() => {\n    dispatch(SetCanvas(canvasRef.current));\n    return () => dispatch(UnsetCanvas());\n  }, [dispatch]);\n\n  return (\n    <canvas ref={canvasRef} id='canvas' />\n  );\n}\n","import * as types from './types';\n\nexport const SetCanvas = current => ({\n  type: types.SET,\n  current\n});\n\nexport const UnsetCanvas = () => ({\n  type: types.UNSET\n});\n"],"sourceRoot":""}